spring.application.name=student-service
spring.datasource.url=jdbc:mysql://localhost:3306/university
spring.datasource.username=root
spring.datasource.password=root
server.port=8083

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#address.service.url=http://localhost:8082/api/address
#forfeignclient
address.service.url=http://localhost:8082

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# set circuit-breaker Resiliance4j properties.
resilience4j.circuitbreaker.instances.addressService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.addressService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.addressService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.addressService.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.addressService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.addressService.eventConsumerBufferSize=3
resilience4j.circuitbreaker.instances.addressService.registerHealthIndicator=true
management.endpoints.web.exposure.include=*
#management.health.circuitbreaker.enabled=true
management.endpoint.health.show-details=always     
management.health.circuitbreakers.enabled: false 
management.health.ratelimiters.enabled: true
resilience4j.circuitbreaker.configs.default.registerHealthIndicator: true

logging.pattern.level= "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
management.tracing.sampling.probability=1.0
management.metrics.export.prometheus.enabled=true
micrometer.tracing.enabled=true